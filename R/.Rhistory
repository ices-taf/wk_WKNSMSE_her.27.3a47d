a
a <- rowSums(NSH3f.sam@harvest[1,1], dims = 5)
a
dim(a)
a <- NSH3f.sam@harvest[1,1]
dim(a)
a <- NSH3f.sam@harvest
a
dim(a)
idxAge<-1
a <- NSH3f.sam@harvest[idxAge,]
dim(a)
a<-drop(a)
a
dim(a)
a <- NSH3f.sam@harvest[3,]
a
a<-drop(a)
a
dim(a)
rowsum(a)
rowsum(a,dims = 2)
Ftot = a[,'A']
Ftot
dim(NSH3f.sam@harvest)
NSH3f.sam@harvest[idxAge,,,,'A']
idxAge
NSH3f.sam@harvest[idxAge,,,,1]
NSH3f.sam@harvest[idxAge,,,,2]
idxAge
NSH3f.sam@harvest
idxAge<-3
NSH3f.sam@harvest[idxAge,,,,2]
Ftot            <-  NSH3f.sam@harvest[idxAge,,,,1] + # fleet A
NSH3f.sam@harvest[idxAge,,,,2]   # fleet BD
NSH3f.sam@harvest[idxAge,,,,2]   # fleet C
Ftot            <-  drop(Ftot)
Ftot
Ftot            <-  NSH3f.sam@harvest[idxAge,,,,1] + # fleet A
NSH3f.sam@harvest[idxAge,,,,2]   # fleet BD
NSH3f.sam@harvest[idxAge,,,,3]   # fleet C
Ftot            <-  drop(Ftot)
FAProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FAProp)  <- yearCurrent
rownames(FAProp)  <- ages
FBDProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FBDProp)  <- yearCurrent
rownames(FBDProp)  <- ages
FCProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FCProp)  <- yearCurrent
rownames(FCProp)  <- ages
FCProp[idxAge,] <-  NSH3f.sam@harvest[idxAge,,,,3]/Ftot
NSH3f.sam@harvest[idxAge,,,,3]/Ftot
FCProp[idxAge,] <-  drop(NSH3f.sam@harvest[idxAge,,,,3]/Ftot)
dim(drop(NSH3f.sam@harvest[idxAge,,,,3]/Ftot))
dim(NSH3f.sam@harvest[idxAge,,,,3])
dim(Ftot)
Ftot
drop(NSH3f.sam@harvest[idxAge,,,,3])/Ftot
FCProp[idxAge,] <-  drop(NSH3f.sam@harvest[idxAge,,,,3])/Ftot
dim(FCProp[idxAge,])
FCProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
length(FCProp)
length(ages)
length(yearCurrent)
yearCurrent
NSH3f.sam@harvest[idxAge,,,,3]
Ftot            <-  NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1] + # fleet A
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2]   # fleet BD
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3]   # fleet C
Ftot            <-  drop(Ftot)
FCProp[idxAge,] <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3])/Ftot
FAProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FAProp)  <- yearCurrent
rownames(FAProp)  <- ages
FBDProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FBDProp)  <- yearCurrent
rownames(FBDProp)  <- ages
FCProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FCProp)  <- yearCurrent
rownames(FCProp)  <- ages
for(idxAge in 1:nAges){
Ftot              <-  NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1] + # fleet A
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2]   # fleet BD
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3]   # fleet C
Ftot              <-  drop(Ftot)
FAProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1])/Ftot
FBDProp[idxAge,]  <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2])/Ftot
FCProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3])/Ftot
}
yrChainFC   <- randBlocks(an(fecYears),an(projPeriod),nits)
ages        <- NSH3f.sam@range[1]:NSH3f.sam@range[2]
# initializing object
FAProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FAProp)  <- yearCurrent
rownames(FAProp)  <- ages
FBDProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FBDProp)  <- yearCurrent
rownames(FBDProp)  <- ages
FCProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FCProp)  <- yearCurrent
rownames(FCProp)  <- ages
for(idxAge in 1:length(ages)){
Ftot              <-  NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1] + # fleet A
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2]   # fleet BD
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3]   # fleet C
Ftot              <-  drop(Ftot)
FAProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1])/Ftot
FBDProp[idxAge,]  <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2])/Ftot
FCProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3])/Ftot
}
FCProp
FAProp
dim(FAProp)
FAProp[3,]
FBDProp[3,]
FCProp[3,]
yrChainFC   <- randBlocks(an(fecYears),an(projPeriod),nits)
ages        <- NSH3f.sam@range[1]:NSH3f.sam@range[2]
# initializing object
FAProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FAProp)  <- yearCurrent
rownames(FAProp)  <- ages
FBDProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FBDProp)  <- yearCurrent
rownames(FBDProp)  <- ages
FCProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FCProp)  <- yearCurrent
rownames(FCProp)  <- ages
for(idxAge in 1:length(ages)){
Ftot              <-  NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1] + # fleet A
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2] + # fleet BD
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3]   # fleet C
Ftot              <-  drop(Ftot)
FAProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1])/Ftot
FBDProp[idxAge,]  <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2])/Ftot
FCProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3])/Ftot
}
FAProp[3,]
FBDProp[3,]
FCProp[3,]
0.7741507+0.035352795+0.190496526
FCProp
?rep
rep(0, 3)
rep(c(0,0), 3)
FCProp <- c(FCProp,
array(0,dim=c(length(ages),nFutureyrs))) # adding future years
FCProp
dim(FCProp)
yrChainFC   <- randBlocks(an(fecYears),an(projPeriod),nits)
ages        <- NSH3f.sam@range[1]:NSH3f.sam@range[2]
# initializing object
FAProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FAProp)  <- yearCurrent
rownames(FAProp)  <- ages
FBDProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FBDProp)  <- yearCurrent
rownames(FBDProp)  <- ages
FCProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FCProp)  <- yearCurrent
rownames(FCProp)  <- ages
for(idxAge in 1:length(ages)){
Ftot              <-  NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1] + # fleet A
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2] + # fleet BD
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3]   # fleet C
Ftot              <-  drop(Ftot)
FAProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1])/Ftot
FBDProp[idxAge,]  <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2])/Ftot
FCProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3])/Ftot
}
FCProp
dim(FCProp)
dim(array(0,dim=c(length(ages),nFutureyrs)))
c(FCProp,
array(0,dim=c(length(ages),nFutureyrs)))
dim(c(FCProp,
array(0,dim=c(length(ages),nFutureyrs))))
c(FCProp,[0 0 0 0 0 0 0 0 0])
[0 0 0 0 0 0 0 0 0]
(0 0 0 0 0 0 0 0 0)
c(0 0 0 0 0 0 0 0 0)
c(0,0,0,0,0,0,0,0,0)
t(c(0,0,0,0,0,0,0,0,0))
c(FCProp,t(c(0,0,0,0,0,0,0,0,0)))
length(c(FCProp,t(c(0,0,0,0,0,0,0,0,0))))
cbind(FCProp,
array(0,dim=c(length(ages),nFutureyrs))) # adding future years
FCProp <- cbind(FCProp,
array(0,dim=c(length(ages),nFutureyrs))) # adding future years
stocks[[idxIter]]@mat
stocks[[idxIter]]@mat$year
names(stocks[[idxIter]]@mat)\
names(stocks[[idxIter]]@mat)
names(stocks[[idxIter]]@mat)[2]
rownames(stocks[[idxIter]]@mat)
colnames(stocks[[idxIter]]@mat)
as.numeric(colnames(stocks[[idxIter]]@mat))
histPeriod
cbind(histPeriod,projPeriod)
rbind(histPeriod,projPeriod)
c(histPeriod,projPeriod)
fullPeriod          <- c(histPeriod,projPeriod)
colnames(FBDProp)  <- as.numeric(fullPeriod)
dim(as.numeric(fullPeriod))
dim(fullPeriod)
length(fullPeriod)
dim(FCProp)
dim(FCProp)
colnames(FCProp)  <-  as.numeric(fullPeriod)
FCProp
yrChainFC   <- randBlocks(an(fecYears),an(projPeriod),nits)
ages        <- NSH3f.sam@range[1]:NSH3f.sam@range[2]
# initializing object
FAProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FAProp)  <- yearCurrent
rownames(FAProp)  <- ages
FBDProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FBDProp)  <- yearCurrent
rownames(FBDProp)  <- ages
FCProp            <- array(0, dim=c(length(ages),length(yearCurrent))) # initialize array nAges x nYears
colnames(FCProp)  <- yearCurrent
rownames(FCProp)  <- ages
for(idxAge in 1:length(ages)){
Ftot              <-  NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1] + # fleet A
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2] + # fleet BD
NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3]   # fleet C
Ftot              <-  drop(Ftot)
FAProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,1])/Ftot
FBDProp[idxAge,]  <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,2])/Ftot
FCProp[idxAge,]   <-  drop(NSH3f.sam@harvest[idxAge,1:length(yearCurrent),,,3])/Ftot
}
FCPropIts         <- array(0, dim=c(length(ages),length(fullPeriod),nits)) # initialize array nAges x nYears
dim(FCPropIts)
FCPropIts
colnames(FCPropIts)   <- yearCurrent
rownames(FCPropIts)   <- ages
dimnames(FCPropIts)
dim(FCPropIts)
list(c("a", "b", "c"),
c("d", "e", "f"),
c("g", "h", "i"))
ar <- array(data     = 1:27,
dim      = c(3, 3, 3),
dimnames = list(c("a", "b", "c"),
c("d", "e", "f"),
c("g", "h", "i")))
ar
ar <- array(data     = 1:27,
dim      = c(3, 3, 3))
ar
ages
c(length(ages),length(fullPeriod),nits)
array(0, # initialize array
dim=c(length(ages),length(fullPeriod),nits))
list(ages,
1)
fullPeriod
1:nits
FCPropIts             <- array(0, # initialize array
dim=c(length(ages),length(fullPeriod),nits), # nAges x nYears x nits
dimnames = list(ages,
as.numeric(fullPeriod),
1:nits))
FCPropIts
dim(FCPropIts)
FCPropIts[,,1]
FCPropIts[,,2]
FCPropIts[,,3]
FCPropIts[,,10]
yrChainFC
dim(yrChainFC)
yrChainFC[1]
yrChainFC[[idxIter]]
ac(yrChain[[idxIter]])
dim(FCProp)
histPeriod
FCPropIts[,as.numeric(histPeriod),idxIter]
FCPropIts
FCProp
FCProp[,1947]
FCProp[,'1947']
FCPropIts[,histPeriod,idxIter] <- FCProp
FCPropIts[,histPeriod,idxIter]
yrChainFC
dim(yrChainFC)
dim(yrChainFC[1])
yrChainFC[1]
length(yrChainFC[1])
length(yrChainFC[1]$`1`)
length(yrChainFC$`1`)
length(yrChainFC$`2`)
length(yrChainFC$`3`)
length(yrChainFC$`4`)
length(yrChainFC$`5`)
length(yrChainFC$`6`)
length(yrChainFC$`7`)
length(yrChainFC$`8`)
length(yrChainFC$`9`)
length(yrChainFC$`10`)
ac(yrChain[[idxIter]])
length(ac(yrChain[[idxIter]]))
dim(stocks[[idxIter]]@mat[,projPeriod])
dim(stocks[[idxIter]]@mat[,ac(yrChain[[idxIter]])])
dim(array(stocks[[idxIter]]@mat[,ac(yrChain[[idxIter]])],
dim=dim(stocks[[idxIter]]@mat[,projPeriod])))
ac(yrChainFC[[idxIter]])
FCProp[,ac(yrChainFC[[idxIter]])]
dim(FCPropIts[,projPeriod,idxIter])
array(FCProp[,ac(yrChainFC[[idxIter]])],
dim=dim(FCPropIts[,projPeriod,idxIter]))
ac(yrChainFC[[idxIter]])
FCProp
for(idxIter in 1:nits){
# fill in historical period, no randominzation in these.
FCPropIts[,histPeriod,idxIter] <- FCProp
# fill in projection period with randomization (see above comments)
FCPropIts[,projPeriod,idxIter] <- array(FCProp[,ac(yrChainFC[[idxIter]])],
dim=dim(FCPropIts[,projPeriod,idxIter]))
}
FCPropIts
FCPropIts[,,1]
yrChainFC[[1]]
dim(FCPropIts)
dim(yrChainFC[[1]])
length(yrChainFC[[1]])
dimnames(NSH@harvest)
covmat1
?cov
apply(log(NSH@harvest[,ac(2003:2013),drop=T]),1,diff)
2013+8
covmat1                                                        <- cov(apply(log(NSH@harvest[,ac(2003:2013),drop=T]),1,diff))
covmat1[ac(3:8),ac(3:8)]
ac(3:8)
ac(3:8)
dim(covmat1)
covmat1
covmat1[ac(0:2),ac(3:8)]
covmat1[ac(0:2),ac(3:8)] <- 0
covmat1[ac(3:8),ac(0:2)]
covmat1
covmat1
covmat1                                                        <- cov(apply(log(NSH@harvest[,ac(2003:2013),drop=T]),1,diff))
apply(log(NSH@harvest[,ac(2003:2013),drop=T]),1,diff)
log(NSH@harvest[,ac(2003:2013),drop=T])
NSH@harvest[,ac(2003:2013)
]
NSH@harvest[,ac(2003:2013),drop=T]
log(NSH@harvest[,ac(2003:2013),drop=T])
?diff
apply(log(NSH@harvest[,ac(2003:2013),drop=T]),1,diff)
log(NSH@harvest[,ac(2003:2013),drop=T])
-3.726082--3.067250
-3.726082--3.2927320
-3.726082+3.067250
3.2927320-3.726082
# covariance of the difference between years
covmat1                                                        <- cov(apply(log(NSH@harvest[,ac(2003:2013),drop=T]),1,diff))
?cov
apply(log(NSH@harvest[,ac(2003:2013),drop=T]),1,diff)
#- Create random walk over Fs (as multiplier from last years selection pattern)
# covariance of the difference between years
covmat1                                                        <- cov(apply(log(NSH@harvest[,ac(2003:2013),drop=T]),1,diff))
cov(apply(log(NSH@harvest[,ac(2003:2013),drop=T]),1,diff))
histPeriod
recrPeriod
selPeriod
covmat1                                                        <- cov(apply(log(NSH@harvest[,fecYears,drop=T]),1,diff))
apply(log(NSH@harvest[,fecYears,drop=T]),1,diff)
covmat1                                                        <- cov(apply(log(NSH@harvest[,fecYears,drop=T]),1,diff))
covmat1[ac(3:8),ac(3:8)] <- covmat1[ac(3:8),ac(0:2)] <- covmat1[ac(0:2),ac(3:8)] <- 0
covmat1
covmat1                                                        <- cov(apply(log(NSH@harvest[,fecYears,drop=T]),1,diff))
covmat1[ac(0:2),ac(3:8)] <- 0
covmat1[ac(3:8),ac(0:2)] <- covmat1[ac(0:2),ac(3:8)]
covmat1[ac(3:8),ac(3:8)] <- covmat1[ac(3:8),ac(0:2)]
covmat1
yearCurrent
max(yearCurrent)-10
2013-1997
covmat2                                                       <- cov(apply(log(NSH@harvest[,max(yearCurrent)-20,drop=T]),1,diff))
apply(log(NSH@harvest[,max(yearCurrent)-20,drop=T]),1,diff)
max(yearCurrent)-20
covmat1                                                        <- cov(apply(log(NSH@harvest[,ac(max(yearCurrent)-10:max(yearCurrent)),drop=T]), # covariance for the last 10 years
1,
diff))
apply(log(NSH@harvest[,ac(max(yearCurrent)-10:max(yearCurrent)),drop=T]), # covariance for the last 10 years
1,
diff)
ac(max(yearCurrent)-10:max(yearCurrent))
max(yearCurrent)-10
max(yearCurrent)
ac(max(yearCurrent)-10:max(yearCurrent)
covmat1                                                        <- cov(apply(log(NSH@harvest[,ac((max(yearCurrent)-10):max(yearCurrent)),drop=T]), # covariance for the last 10 years
1,
diff))
covmat1
covmat1[ac(0:2),ac(3:8)] <- 0
covmat1[ac(3:8),ac(0:2)] <- covmat1[ac(0:2),ac(3:8)]
covmat1[ac(3:8),ac(3:8)] <- covmat1[ac(3:8),ac(0:2)]
covmat2                                                       <- cov(apply(log(NSH@harvest[,ac((max(yearCurrent)-20):max(yearCurrent)),drop=T]), # covariance over the last 20 years
1,
diff))
covmat2
covmat2[ac(0:2),ac(0:2)]  <- 0;
covmat2
covmat                    <- covmat1 + covmat2
covmat
?mvrnorm
nFutureyrs
mvrnorm(nits*nFutureyrs,rep(0,length(ages))
mvrnorm(nits*nFutureyrs,rep(0,length(ages)),cov(apply(log(NSH@harvest[,selPeriod,drop=T]),1,diff))))
mvrnorm(nits*nFutureyrs,rep(0,length(ages)),cov(apply(log(NSH@harvest[,selPeriod,drop=T]),1,diff)))
dim(mvrnorm(nits*nFutureyrs,rep(0,length(ages)),cov(apply(log(NSH@harvest[,selPeriod,drop=T]),1,diff))))
nits*nFutureyrs
rep(0,length(ages))
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,rep(0,length(ages)),cov(apply(log(NSH@harvest[,selPeriod,drop=T]),1,diff)))),
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dmns)
dmns                                                          <- dimnames(NSH@harvest)
dmns$year                                                     <- projPeriod
dmns$iter                                                     <- 1:nits
ages                                                          <- dimnames(stocks@stock.n)$age
dimnames(NSH@harvest)
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,rep(0,length(ages)),cov(apply(log(NSH@harvest[,selPeriod,drop=T]),1,diff)))),
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dmns)
wF
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,rep(0,length(ages)),covmat)),
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dmns)
wF
array(t(mvrnorm(nits*nFutureyrs,rep(0,length(ages)),cov(apply(log(NSH@harvest[,selPeriod,drop=T]),1,diff)))),
dim=c(length(ages),nFutureyrs,1,1,1,nits))
a<-array(t(mvrnorm(nits*nFutureyrs,rep(0,length(ages)),cov(apply(log(NSH@harvest[,selPeriod,drop=T]),1,diff)))),
dim=c(length(ages),nFutureyrs,1,1,1,nits))
b<-array(t(mvrnorm(nits*nFutureyrs,rep(0,length(ages)),covmat)),
dim=c(length(ages),nFutureyrs,1,1,1,nits))
dim()
dim(a)
dim(b)
a[1,,,,,1]
b[1,,,,,1]
WF<-0
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,rep(0,length(ages)),covmat)),
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dmns)
selPeriod
covmat1                                                        <- cov(apply(log(NSH@harvest[,ac((max(yearCurrent)-10):max(yearCurrent)),drop=T]), # covariance for the last 10 years
1,
diff))
covmat10Y                 <- covmat1
covmat10Y
cov(apply(log(NSH@harvest[,selPeriod,drop=T]),
1,
diff)
)
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,
rep(0,length(ages)),
covmat10Y)),
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dmns)
# using 10 year period for the covariance for age 0 to 2 and 20 year period for ages 3+
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,
rep(0,length(ages)),
covmatMix)), # covariance matrix using 10 years for age 0 to 2 and 20 years for ages 3+
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dmns)
covmatMix                 <- covmat1 + covmat2 # mix of year period for different ages
covmat1                                                        <- cov(apply(log(NSH@harvest[,ac((max(yearCurrent)-10):max(yearCurrent)),drop=T]), # covariance for the last 10 years
1,
diff))
covmat10Y                 <- covmat1 # covariance computed for all the ages over the 10 years
covmat1[ac(0:2),ac(3:8)]  <- 0
covmat1[ac(3:8),ac(0:2)]  <- covmat1[ac(0:2),ac(3:8)]
covmat1[ac(3:8),ac(3:8)]  <- covmat1[ac(3:8),ac(0:2)]
# covariance over 20 years for age 3 and up
covmat2                                                       <- cov(apply(log(NSH@harvest[,ac((max(yearCurrent)-20):max(yearCurrent)),drop=T]), # covariance over the last 20 years
1,
diff))
covmat2[ac(0:2),ac(0:2)]  <- 0;
covmatMix                 <- covmat1 + covmat2 # mix of year period for different ages
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,
rep(0,length(ages)),
covmatMix)), # covariance matrix using 10 years for age 0 to 2 and 20 years for ages 3+
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dimnames(NSH@harvest))
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,
rep(0,length(ages)),
covmatMix)), # covariance matrix using 10 years for age 0 to 2 and 20 years for ages 3+
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dmns)
dimnames(NSH@harvest)
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,
rep(0,length(ages)),
covmatMix)), # covariance matrix using 10 years for age 0 to 2 and 20 years for ages 3+
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dimnames(NSH@harvest))
dmns                                                          <- dimnames(NSH@harvest)
wF                                                            <- FLQuant(array(t(mvrnorm(nits*nFutureyrs,
rep(0,length(ages)),
covmatMix)), # covariance matrix using 10 years for age 0 to 2 and 20 years for ages 3+
dim=c(length(ages),nFutureyrs,1,1,1,nits)),
dimnames=dmns)
wF
dimnames(NSH@harvest)
dimnames(WF)
wF
dim(wF)
NSH@harvest
qtil                                                          <- quantile(c(wF),probs=c(0.05,0.95))
qtil
